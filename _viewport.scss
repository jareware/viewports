$_viewport_config: (
    /* from */    0px /* onwards it's */ "tiny",
    /* from */  480px /* onwards it's */ "small",   // (just an arbitrary value)
    /* from */  768px /* onwards it's */ "medium",  // (portrait iPad width)
    /* from */ 1024px /* onwards it's */ "large"    // (landscape iPad width)
    );

//    What this configuration means is:
//
//    0px         480px       768px       1024px      >9000px
//    \__________/\__________/\__________/\____________...
//       "tiny"      "small"    "medium"      "large"
//       0-479       480-767    768-1023       1024->

@mixin viewport($name) {

    $queryType: 'among';
    $lookForName: nth($name, 1);

    @if (nth($name, 1) == 'up-to') {
        $queryType: 'up-to';
        $lookForName: nth($name, 2);
    } @else if (nth($name, 1) == 'up-from') {
        $queryType: 'up-from';
        $lookForName: nth($name, 2);
    }

    $rangeIndex: false;
    $lastRange: false;

    @for $i from 1 to length($_viewport_config) + 1 {
        @if (nth(nth($_viewport_config, $i), 2) == $lookForName) {
            $rangeIndex: $i;
            @if ($i == length($_viewport_config)) {
                $lastRange: true;
            }
        }
    }

    $lowBound: nth($_viewport_config, $rangeIndex);

    @if ($queryType == 'up-to') {

        @if ($lastRange) { // saying "up-to" a last range doesn't really make sense, but for consistency let's tolerate it
            @content;
        } @else {
            $highBound: nth($_viewport_config, $rangeIndex + 1);
            @media (max-width: #{nth($highBound, 1) - 1}) {
                @content;
            }
        }

    } @else if ($queryType == 'up-from') {

        @media (min-width: #{nth($lowBound, 1)}) {
            @content;
        }

    } @else if ($queryType == 'among') {

        @if ($lastRange) {
            @media (min-width: #{nth($lowBound, 1)}) {
                @content;
            }
        } @else {
            $highBound: nth($_viewport_config, $rangeIndex + 1);
            @media (min-width: #{nth($lowBound, 1)}) and (max-width: #{nth($highBound, 1) - 1}) {
                @content;
            }
        }
    }
}
